name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: openjdk:11
    steps:
    - uses: actions/checkout@v2
    - name: Download Apktool wrapper
      run: wget -O /usr/local/bin/apktool https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool
    - name: Download Apktool Jar
      run: wget -O /usr/local/bin/apktool.jar https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.4.1.jar
    - name: Make apktool executable
      run: chmod +x /usr/local/bin/apktool
    - name: Build unsigned apk
      run: apktool b .
    - name: Install apksigner
      run: apt update && apt install apksigner -y
    - name: Create secrets directory
      run: mkdir $HOME/secrets
    - name: Decode signing keystore
      env:
        SIGNING_KEYSTORE: ${{ secrets.SIGNING_KEYSTORE }}
      run: echo "$SIGNING_KEYSTORE" | base64 -d > $HOME/secrets/release.keystore
    - name: Sign apk
      env:
        SIGNING_ALIAS: ${{ secrets.SIGNING_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      run: apksigner sign --ks $HOME/secrets/release.keystore --ks-key-alias "$SIGNING_ALIAS" --ks-pass pass:$SIGNING_KEY_PASSWORD dist/iKMU_4.3.3.apk
    - name: Upload signed apk
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name:  iKMU_4.3.3
        path:  dist/iKMU_4.3.3.apk
  release:
    name: Github Release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: iKMU_4.3.3
      - name: Create Release
        id: create_release
        continue-on-error: true
        uses: Roang-zero1/github-create-release-action@v2.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version_regex: ^v[\d.-]+
          prerelease_regex: ^v[\d.-]+(alpha|beta)$
      - name: Upload release asset
        if: steps.create_release.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./iKMU_4.3.3/iKMU_4.3.3.apk
          asset_name: iKMU_4.3.3.apk
          asset_content_type: application/vnd.android.package-archive
